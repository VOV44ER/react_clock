{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","setInterval","setState","console","log","toLocaleTimeString","prevProps","props","clockName","clearInterval","className","React","Component","App","isClockVisible","showClock","hideClock","setRandom","Math","floor","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAZP,gCAeE,SAAmBC,GACbN,KAAKO,MAAMC,YAAcF,EAAUE,WAErCL,QAAQC,IAAR,iCAAsCE,EAAUE,UAAhD,eAAgER,KAAKO,MAAMC,cAlBjF,kCAsBE,WACMR,KAAKD,SACPU,cAAcT,KAAKD,WAxBzB,oBA4BE,WACE,OACE,qCACE,6CACA,sBAAMW,UAAU,YAAhB,+BAA4CV,KAAKO,MAAMC,aACvD,oBAAGE,UAAU,QAAb,0BAEG,IACAV,KAAKJ,MAAMC,KAAKQ,+BApC3B,GAA2BM,IAAMC,WCA3BC,E,4MACJjB,MAAe,CACbkB,gBAAgB,EAChBN,UAAW,G,EAGbO,UAAY,WACV,EAAKb,SAAS,CAAEY,gBAAgB,K,EAGlCE,UAAY,WACV,EAAKd,SAAS,CAAEY,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKf,SAAS,CAAEM,UAAWU,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAG7C,WACE,OACE,sBAAKV,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,wBAAQW,KAAK,SAASX,UAAU,qBAAqBY,QAAStB,KAAKe,UAAnE,wBAGA,wBAAQM,KAAK,SAASX,UAAU,qBAAqBY,QAAStB,KAAKgB,UAAnE,wBAGA,wBAAQK,KAAK,SAASX,UAAU,uBAAuBY,QAAStB,KAAKiB,UAArE,2BAIDjB,KAAKJ,MAAMkB,gBACV,cAAC,EAAD,CAAON,UAAWR,KAAKJ,MAAMY,mB,GAjCrBG,IAAMC,WAwCTC,IC/CfU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.352757a4.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: Date;\n};\n\ntype Props = {\n  clockName: number;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    date: new Date(),\n  };\n\n  timerId?: NodeJS.Timeout;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.clockName !== prevProps.clockName) {\n      // eslint-disable-next-line\n      console.log(`Clock was renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h1>React clock</h1>\n        <span className=\"clockName\">{`Clock Name: ${this.props.clockName}`}</span>\n        <p className=\"clock\">\n          Current time:\n          {' '}\n          {this.state.date.toLocaleTimeString()}\n        </p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  setRandom = () => {\n    this.setState({ clockName: Math.floor(Math.random() * 100) });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App_buttons\">\n          <button type=\"button\" className=\"button button-show\" onClick={this.showClock}>\n            Show Clock\n          </button>\n          <button type=\"button\" className=\"button button-hide\" onClick={this.hideClock}>\n            Hide Clock\n          </button>\n          <button type=\"button\" className=\"button button-random\" onClick={this.setRandom}>\n            Set Random\n          </button>\n        </div>\n        {this.state.isClockVisible && (\n          <Clock clockName={this.state.clockName} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}